let input = "
C Z
C Z
A X
A X
B Z
B Z
B Z
A Z
B X
A X
A X
A X
C Z
C Z
C X
A X
A X
A X
C Z
B Z
C Z
A Y
B Z
A X
C Y
A X
A X
C Y
C Z
A Y
B Z
A X
C Y
B Z
B Z
B Z
A X
C X
C X
B Z
A X
C Z
A X
B Z
A Y
C X
A X
C Z
C Z
B Z
C Y
C X
C X
C X
C X
A Y
C Y
C Z
C Y
A X
C Y
A X
B Z
A Y
C X
A X
B Y
A X
C X
C X
C Z
A X
C X
A X
C X
B Z
A Z
B Y
B Z
B Z
A X
C Y
B X
A X
A X
B Z
A X
C X
C Z
C Z
A X
C Z
C Z
C Z
C X
C Z
A X
B Z
B Y
C Z
B Z
B Z
A X
B Z
C Y
C Z
A X
A Y
C Z
A X
B Y
C Y
C Z
A X
C Y
C X
A X
C X
A X
C Z
A X
C Y
A Y
C Z
C X
C Y
C Y
A Y
A Y
C Y
C Y
A Y
A X
C Z
C Z
C X
C X
C Z
A Y
C Z
C Z
A Y
A Y
B Z
A X
B Z
C Y
B Z
C Z
C Y
C Y
B Y
C X
A X
A X
A X
A Y
A X
C Z
C Z
C Z
A X
B Z
A X
B Z
C Y
C Z
A Y
C Y
A X
A X
C Z
B X
C Z
C Z
B Z
B Z
B Z
C Z
C X
C Z
A X
B Z
C Z
C X
A X
A Y
B Y
A X
B Z
A X
C Z
C Z
C X
B Z
C Z
C Z
C X
A X
A X
B Y
C Y
C Z
B Y
A X
B Z
A X
B X
B Z
C X
C X
C Y
C X
B Y
B Z
C X
A Y
C X
C Y
A X
C Z
C Z
C X
B Z
A Y
B Z
A Y
B X
A X
C Z
B Z
C X
C X
C X
A X
C X
B Z
C Z
B Y
B Z
A X
A X
C Z
B Z
A X
A Z
C Y
B Z
C X
C Z
A Y
C X
A X
A X
A Y
B Z
A X
B Z
A Y
B X
C X
C Y
A X
C Z
B X
C Z
C X
C X
C Z
A X
B Z
C Z
C X
C Z
B Y
A X
C X
C Y
A X
C Z
A X
B Z
C X
C X
B Z
C Z
C Z
C Y
A X
C Z
C X
A X
C Y
C Z
C Z
C Y
B Y
B Z
A X
B Y
C X
A X
A X
C Y
C Z
B Z
C X
C X
B Z
C Z
A X
A Y
A X
C Y
A Y
B Y
A X
A X
C X
C X
B Z
A Y
B Z
C Z
A X
A Y
A X
C X
A X
C Z
B Y
C Z
A X
B Z
C Z
C Z
A X
A X
B Z
B Z
B Z
A X
C X
A X
A X
C Y
C Y
C X
C X
A X
A Y
B Y
C Z
C Z
B Y
C X
C Z
A Y
C X
C Z
C X
B Z
C Y
C Z
C X
C Y
C Z
B Z
C Z
B Z
A X
B Y
B Y
C Z
B Z
C X
C Z
C Z
C Z
B Y
B Z
C Z
B Y
A X
A X
C X
A X
C X
A X
B Z
A X
A X
A X
C Z
A Y
A X
C Z
C X
A X
C X
A X
B Z
C Z
C Z
C Z
A X
A X
C Z
A X
B Z
C X
C Z
C Y
B Z
A X
B Z
A X
A Z
B Y
B Z
B Z
B Z
A Y
C Z
A X
B Y
C X
B X
B Z
C X
B Y
C Z
A X
C X
B Z
A X
B Z
A X
A X
B Y
C Y
C X
C X
C Z
A X
C Z
A X
B Y
C X
C Y
B Y
B Y
A Y
C X
A Y
C Z
C Y
A X
C Z
C Z
B Z
A X
A X
A X
A X
B Z
C Z
C X
C X
C Z
A X
B Z
B Y
C Y
A Y
C X
B Z
A Y
B Z
C Z
B Z
C X
A X
B Z
A X
A Y
C Y
B Z
B Z
C X
C Z
C Z
C Z
A X
B Z
A Y
A X
C Y
A Y
B Z
A Y
C Z
A Y
A Y
C X
A X
B Z
A Y
B Z
C X
A X
B Y
B Z
C Z
C Z
B Z
A X
A X
B Y
C Z
C Y
B Z
C Z
A Y
A X
C X
C Z
A X
A X
A Z
C X
C X
B X
B Z
A Y
C X
A Y
C X
C Z
A Y
B Z
A X
B X
A Y
C X
C Y
A Y
C X
B Y
C Y
A X
B Z
A X
C Z
A X
A X
C Z
C Z
B X
C X
A Y
B Z
C Z
A X
A X
C Z
C Y
A X
C X
C Z
C Y
C X
C Y
C X
C Z
C Z
B Z
A X
A Y
B Z
A X
B Z
C X
B Y
A X
A X
A X
A X
B Z
C Z
B Z
B Y
C Z
C X
C Z
C X
B Z
C Z
A X
C Z
C Z
A Y
C X
A X
B Z
A X
B Z
B Y
A X
A X
A X
A Y
C Z
A X
B Y
A Y
B Y
C Y
A X
A X
C Y
A X
C Z
B Z
C X
C Z
A X
B Z
C Z
B Z
B Z
B Z
C X
C Z
A X
A Y
C X
C Z
B Z
B Y
C Z
B Y
B Z
C Z
A Y
B Z
C X
C Y
A X
B Y
A X
C Z
C X
C Z
A X
C X
B Z
B X
C Z
B Z
A Y
A X
A Y
C Z
C Y
A X
B X
A Z
C Y
C X
C Y
C X
C Y
B Z
C X
B Y
C Z
C Y
B Z
A Y
B Y
C Z
C X
B Z
A Y
C Z
C Z
C Z
C Y
C X
C X
B Y
C Z
A Y
C Z
C X
B Y
C X
B Z
B Z
B Z
B Z
C Y
C Z
C X
B X
C Z
C Z
C Z
C X
B Y
B Z
C X
A X
C Y
B X
C X
C X
C Z
A X
A X
B Z
B Z
A X
C Z
A X
A Y
C X
B X
C Y
C Y
A X
A X
C Z
C Z
B Y
B Y
B Z
C X
A X
A Z
C Z
B Y
C Y
C X
C Y
B Z
C X
A X
A X
C Z
C Y
B X
C Z
B Z
A X
C X
A Y
C Y
C Z
B Z
C Z
A X
C Y
B Z
C Y
B X
C Z
C Z
A X
A X
C X
C Z
C X
C Y
C Z
A Y
C X
C Z
B Y
B Y
C Z
A X
C Y
A X
C X
C X
B Y
C Z
C Z
A X
A Y
C Z
B Z
C Y
A X
A X
C Z
C Z
A X
C Z
C Z
B Z
B Z
A X
A Y
A X
C Z
C X
A X
B X
C Z
C Z
B Y
A X
B Z
C X
C Z
C Z
C Z
C X
A Y
A X
A Y
A X
A Y
C Z
C Z
B Z
B Y
A X
B Z
C Z
C X
C Y
C Z
A X
C Y
B Y
B Z
C Z
B Y
C X
C Z
B Y
B Z
B Y
C X
C Z
C X
C Z
B Y
B Z
C X
A X
A Y
B Z
B Y
A X
A X
C Z
A X
A X
C X
A X
C Z
C X
A X
B X
A Y
C X
A X
C Y
A X
C Z
A X
A X
C Z
A X
A X
C Z
A X
B Y
B Z
A X
C X
A X
C X
B Z
C Y
A Y
C Z
B Z
A X
C X
A X
B Y
C X
B Y
B Z
A X
B Z
C X
B Z
A X
A X
C X
A X
C X
A Y
C Z
A X
B Y
B Z
C Z
C Z
A X
C Y
B Z
C X
B Z
B Z
C Z
A X
C X
C X
A Y
A X
C Z
B Z
A X
B X
A X
B Z
B Z
C Z
B Y
C Z
A X
C Z
C Z
C Z
C X
A X
A X
C Y
B Y
C Z
B Y
A X
B Z
A Y
C Y
B Y
C Z
C X
C X
A X
B Y
A X
A X
C Z
C X
C Y
A X
A X
A X
C X
B Z
B Y
A X
B Y
C X
C Z
B Z
A X
C X
C Z
B Y
A X
C Z
B Z
B Z
A X
B Y
A X
B Y
C Z
C Z
B Z
C Z
C Y
A X
B Z
C Z
A Y
C Z
B Z
B Z
C Z
B Y
C Z
C Z
B Z
A Y
C X
C Y
B Z
C X
C Z
A X
A X
C Y
A Z
C Z
C X
B Z
B Z
C Y
A X
A Y
C Z
A X
A X
B Z
A X
C X
C X
B X
B X
A Z
B Y
A X
A Y
C Z
A X
A X
B Z
B Z
C Y
A X
C Y
C Z
A Y
C Y
B X
C X
A X
B Z
A X
A X
A X
A X
A X
B X
A X
C Z
B Z
B Z
B X
A X
C Z
B Z
C Z
C Z
C Y
A X
C Y
C Y
C Z
A Y
C Z
A X
C X
C Z
A X
A Y
C Z
C X
A X
C X
B Y
C Z
B Z
A X
C Y
B Z
B Y
A X
C Z
A X
B Z
C Z
C Y
C Z
A X
A X
B Z
B Y
A X
C X
C Y
B X
C Z
A Y
C X
B Y
B Z
A Y
C Y
C Z
C Z
C X
A X
A X
C X
C X
C Z
C X
C X
B X
B Z
B Z
C X
C Z
C X
A X
A X
A X
C Z
C Y
B Z
C X
C X
A X
C X
C Y
A X
B Y
A X
C Z
C Z
B Z
A X
A X
A X
B Z
C X
A X
B Y
B Z
C X
B Y
C X
B Y
C Z
B X
A X
A X
B Z
A X
A X
A X
B Z
A X
C Z
C X
C Z
A X
C Y
C Y
C Z
C Z
C Z
A X
C Z
C X
C Z
C Z
A X
B Z
C X
C Y
B X
B Z
B Z
A X
C Y
B Y
C Z
B Z
C Z
C X
A Z
C Z
B X
C X
C Z
C Z
C X
C Z
C Z
A X
B Z
C Z
C X
A X
B Z
C Y
C Y
B Y
C X
A X
A X
C Z
B Z
C X
C X
C X
B Y
C Z
B X
C X
C Z
A X
A X
C Z
C Z
C X
C X
C Z
A X
C Z
C X
C Z
C Z
A X
C Z
A X
A X
A X
B Z
A X
B Z
C Z
C Z
A X
C Z
C Z
B Z
C Z
A Y
C X
A X
A X
C X
A X
C X
C X
A Y
B Y
C Z
B Z
C X
B Y
C Y
C X
C Z
A X
C Y
B Z
B Y
A X
B Y
B Y
A X
C X
C X
A X
A Y
C Y
B Z
A X
B Z
A Y
B Y
C Z
C Z
C Z
A Y
B Y
B Y
C Z
B Z
C Z
A X
C Y
A X
B Y
B Z
C X
C Y
A X
B Z
B Z
A X
B Z
C Y
A X
C X
C Z
C Z
A X
C Y
A X
C X
C X
B Z
B Y
A X
C Y
B Z
B Y
A X
C Z
A X
B Y
A X
A X
A X
C X
A X
C Z
B Z
C Z
A X
A X
B Y
C X
C Y
C Z
A X
C Z
B Z
A X
B Z
A X
B Y
B Z
C Z
C Z
C Y
C X
A X
C Z
A Y
A X
B Z
B Y
A X
C X
C Z
B Z
A X
C Z
C X
C Y
A X
A X
C Z
A X
A X
C X
C X
A X
C X
C Z
A X
A X
C Y
A Y
B Z
C X
C X
B Y
B Z
A X
B Z
C Z
C Z
A Y
C Y
C Z
A X
C Z
A X
C Y
C X
B X
B Z
A X
A X
B Z
A X
C X
C X
A Y
A X
A X
C Y
B Z
A X
B Y
C X
B Z
C Y
B Y
A X
C Z
B Y
B Z
A X
B Y
C X
C Z
A X
B Z
A X
C Y
C Z
A X
A X
C Y
C Y
C X
A Y
C Z
B Z
A X
A Y
C Z
C Z
C Z
C Z
B Y
A Y
A X
A X
C X
A X
B Y
C Z
B Z
A Y
C X
C X
A Y
A X
A X
C X
C Z
C X
A X
A Y
C X
C Z
C X
A X
A X
C Z
C X
A X
C X
C Z
A X
A X
C Z
B Y
A X
C Z
C Y
C Z
C Z
B X
B Z
B X
A X
C Z
B X
C Z
A X
C Z
A Y
A Z
B Z
C X
A X
A X
A X
A X
A X
C Z
A X
B X
A Y
A X
C X
A X
A Y
A Y
B Y
C X
A Y
A X
C Z
C Z
C Y
B Z
C X
C Z
A Y
C X
C Y
C X
A X
B Y
C Z
C Z
A X
C Z
B Z
B Z
C X
C X
A X
B Y
C X
C X
A X
C Z
B Y
C Y
C Z
A X
B Z
C Z
B Y
C X
A X
B Y
B Z
A X
C Y
B Z
C Z
C X
A X
C X
A X
B Y
C X
A X
C Y
B Z
B Z
B Z
C Y
A X
A X
A Y
C Z
B X
B Z
A X
A X
C X
A X
C X
A X
C X
A X
A X
A X
A Y
A Y
B Y
A X
B Y
A X
B Y
B Z
B Y
A Y
C Z
C Z
C Z
C Z
A X
C Z
C X
C Y
C Z
B Z
B Z
B Z
C Y
C Z
B Z
C X
A Y
A X
C X
C Y
A Y
B Y
C X
C X
B Y
C Z
A X
C X
C X
C X
C X
C X
C X
B Z
C Y
A X
A X
B Y
B Z
A X
C X
C Z
A X
B X
B Z
C Y
B Z
C Z
C Y
A X
C Z
B Y
C X
A X
A Y
A X
C X
A Y
A Y
C Z
B Z
C Z
C X
C Y
B Y
A X
C X
C Z
B Y
A X
B X
B Z
C Z
B Z
B Z
A X
A Y
A X
A X
B Z
C Z
A X
A Y
C Z
C Z
C Y
A X
B Z
C X
C X
A Y
A X
C X
C Y
C Z
C Y
C X
A X
B Z
C Y
B Z
C X
A X
A X
C X
C Z
C Y
C Y
A X
A Y
C Z
A Y
B Y
C Y
A Y
C Z
B Y
C X
A X
B Z
C Z
A X
A X
B Z
C X
B Z
C Z
C Z
A Y
A X
C X
A X
B Z
C X
A X
A X
B Y
A Z
B Z
C X
C Z
C X
C Z
C X
A X
C Z
B Y
C Y
C Z
A X
C Z
A X
A Z
A X
A X
C Z
A X
B Z
C X
B Z
A X
C X
A X
C X
C Z
B Z
A Y
C Y
C Z
C Z
C X
C Z
A X
A X
B Y
B Z
C Y
B Z
A Y
A X
A X
B Z
B X
A X
B Y
B Z
C X
A X
A X
C Z
B Y
C X
B Y
A Y
A Z
A X
B Y
C X
C Z
C Z
C Y
C Z
A X
B X
C X
A Y
A X
C Z
C Y
C X
B Z
A X
C X
C Z
A X
C Z
A X
C X
C X
A Y
C Z
A X
C X
C Z
C Y
A X
A Y
A Y
C Z
C X
A X
C Z
A Y
A Y
A X
B Z
C Z
B Y
C Z
B Y
C X
C Z
B Y
A X
A X
B Z
A X
C Z
A X
A X
B Y
A X
B Z
A Y
A X
A Y
C Z
B Z
A X
B X
B Y
B Z
A X
A Z
B Y
B Z
C X
B Z
A X
B Z
C Z
B Y
C X
A X
A Y
B Y
A Y
C X
C X
B Y
A Y
B Z
C Z
B Z
A Y
A X
B Z
B Z
A Y
C Z
C Z
B Z
C X
B Z
B Y
B Z
B Z
A X
A X
C X
C Z
B Z
A X
B Z
C Y
C Z
A Z
A X
A X
C Z
A X
C Z
C Z
C Z
B Z
A X
A Y
B X
A X
A X
A X
C Z
B X
B X
A X
C Z
A X
B X
A X
A X
B Z
A X
C Z
C Y
A X
B Z
A X
C Z
B Z
A X
A X
B Y
B Y
C Y
A X
B Z
C Y
A X
C Z
B Z
A X
C Z
B Z
C X
B X
B Z
C Z
A X
B Z
A X
A X
A X
A X
C Z
B Z
B Y
C Z
A X
C Z
A X
C X
C X
A X
B Y
C X
B Z
A Y
C Y
B Z
C Y
C X
A X
B Z
C X
B Y
A X
A Y
B Y
B Y
A X
C X
C Z
B Z
A Y
A X
B Y
C X
B Z
B X
C Y
B X
C X
B Y
C X
A X
C Z
B Z
B Y
B Y
A X
A X
A Z
B Z
B Z
C X
C Y
A Y
C Z
C X
A X
C Z
C X
B Z
A Y
B Z
C Z
B Z
B Z
C X
B Z
C X
C X
B Z
A X
B Y
B Z
A X
C X
A X
C Y
A X
C X
B X
C Z
C Y
C Z
B Z
C X
A X
A X
A Y
C Z
C Y
A Y
C Z
B Z
C Z
C Y
A X
A X
C X
C Z
C Z
A Z
C Z
A X
B Z
C X
C Z
A X
B Z
C X
A X
A Y
B Y
C X
A X
A X
C X
C Y
B Z
C X
A X
C X
B Z
B Y
A Y
C Z
A X
C Z
C Z
A X
C Y
B Z
A Y
B Y
B Y
A X
A X
C X
C X
B Y
C Z
C Z
C Z
C X
C Y
C Z
B Z
C Z
A Y
C Z
A X
B Z
B Y
B Z
A X
A X
A X
A X
C X
C Z
B Z
C X
B Z
C Z
A X
C X
C Z
B Y
A X
C X
A X
B Z
B Z
A X
A X
B Y
C Y
C Y
C X
A X
B Z
C Y
B Z
A Y
B Y
B Y
A X
B Z
A X
C X
C Z
A X
B Z
A Y
C Y
B Z
C Z
C Y
A X
C Y
A X
C X
B Z
C X
A X
C Z
A X
B Y
B Z
C X
C Y
B X
A X
B Z
A X
B Y
C X
C X
C Y
C Y
C X
B Y
C Z
C X
B Z
B Y
C X
A Y
C Z
C Z
C X
B X
B Y
A X
A X
C Z
C X
C Y
A X
C Y
A Y
C Z
C X
A X
C Z
C X
A X
B X
C X
C X
C X
B Y
B Z
C X
C Z
A Y
B Y
C X
C X
A X
B Z
C Z
A X
C Y
C Z
A Y
B Z
C X
C Z
A X
C Z
B Z
B Y
B Z
A X
C X
A Y
C X
C Z
B Y
C Y
C Z
C Z
A X
A X
A X
C Z
B Y
C Z
A X
A X
B Z
B Y
B Z
C Z
B Z
A Y
C Y
C Z
B Y
A X
A X
C Z
B Y
C Z
A X
C X
B Y
A Y
B Z
A X
A X
A X
B Y
A X
C Z
B Y
C Z
B Y
C Z
C X
C Y
C X
A X
A X
A X
C Z
C X
C X
B Y
A Y
B Z
B X
C Z
B Y
A X
C Y
B Z
C X
A X
A X
A X
A X
C X
B Y
A X
A X
B Y
A X
B Z
C Z
A X
A X
A X
A X
B Z
A X
C Z
C X
C Y
B Z
C Z
A X
C Y
C Z
A X
A X
C X
B Z
C X
B Z
C Z
A X
A X
A Y
B Y
C Z
B Y
A X
C X
C Z
C Z
C X
A X
A X
C Z
A X
A Y
A X
A X
C Z
C X
C X
C Z
C X
A X
C Z
C Z
B Z
A Y
A Y
B Y
A X
A X
C X
C X
A X
A X
C X
C X
B Y
C Z
A X
B Y
A X
A X
A X
C X
C Y
B Z
B Y
B Z
C Z
C Z
C X
C Z
A X
B Z
A Y
C Z
B Z
A X
C Y
B Z
C Z
C Y
A X
B Y
C Z
A X
A X
A X
C Z
C Z
C X
A Y
C X
B Z
B Y
A X
C X
C X
A Y
A Y
A X
B X
B Z
B Y
B Y
A X
C Y
A X
C Z
C X
C X
C Z
B Z
B Z
C Y
C X
B Z
C Z
A Y
C Y
A X
B Z
A X
C Y
B Z
B Y
C Z
A X
A X
C Z
B Z
B Z
C Z
C Y
C Z
C Z
C X
A Y
A Y
B Z
C Z
B Y
C X
C X
A Z
C Z
A X
A X
C X
A Y
C X
A X
A X
A X
C Y
A X
B Y
A X
B Y
A X
A X
A Y
C X
C Z
A X
C X
B Y
B Z
B Z
A Y
C Z
C X
C X
B Z
B Z
C X
B Y
A X
B Y
A X
A X
C Y
B X
C X
A Z
A Z
A X
C Z
C Y
C Z
C Y
";;

type move =
  | Rock
  | Paper
  | Scissors
;;

exception BadMove of char;; 

let self_to_shape = function
  | 'X' -> Rock
  | 'Y' -> Paper
  | 'Z' -> Scissors
  | other -> raise (BadMove other)
;;

let enemy_to_shape  = function
  | 'A' -> Rock
  | 'B' -> Paper
  | 'C' -> Scissors
  | other -> raise (BadMove other)
;;

let rec map f l = 
  match l with
  | [] -> []
  | h :: t -> f h :: map f t;;

let split = String.split_on_char '\n' input;;

let explode str =
  let rec explode_inner cur_index chars = 
    if cur_index < String.length str then
      let new_char = str.[cur_index] in
      explode_inner (cur_index + 1) (chars @ [new_char])
    else chars in
  explode_inner 0 []
;;

exception BadStr of char list;;

let to_moves str = 
  match explode str with
  | [enemy_move; ' '; my_move] -> Some (self_to_shape my_move, enemy_to_shape enemy_move)
  | [] -> None
  | other -> raise (BadStr other)
;;

let rec filter = function
  | [] -> []
  | (Some h) :: t -> h :: filter t
  | None :: t -> filter t
;;

let moves = filter (map to_moves split);;

exception BadScore of (move * move);;

let move_score move = 
  let win_score = function
    | (a, b) when a = b -> 3
    | (Rock, Scissors) -> 6
    | (Scissors, Rock) -> 0
    | (Paper, Rock) -> 6
    | (Rock, Paper) -> 0
    | (Scissors, Paper) -> 6
    | (Paper, Scissors) -> 0
    | a -> raise (BadScore a)
  in

  let played_score = function
    | Rock -> 1
    | Paper -> 2
    | Scissors -> 3
  in

  let player_move move = 
    let (a, _) = move in a
  in

  (win_score move) + (played_score (player_move move))
;;

let scores = map move_score moves;;

let rec sum = function 
  | [] -> 0
  | h :: t -> h + (sum t)
;;

let score = sum scores;;

assert (score = 14264);;

let () = print_newline ();;
let () = print_int score;;
let () = print_newline ();;

type to_do =
  | Win
  | Tie
  | Lose
;;

let val_to_do = function
  | 'X' -> Lose
  | 'Y' -> Tie
  | 'Z' -> Win
  | other -> raise (BadMove other)
;;

let to_moves_part2 str = 
  match explode str with
  | [enemy_move; ' '; to_do] -> Some (enemy_to_shape enemy_move, val_to_do to_do)
  | [] -> None
  | other -> raise (BadStr other)
;;

let moves = filter (map to_moves_part2 split);;

let move_score_2 move =
  let win_score = function
    | Win -> 6
    | Tie -> 3
    | Lose -> 0
  in

  let get_win = function
    | Rock -> Paper
    | Paper -> Scissors
    | Scissors -> Rock
  in

  let get_lose = function
    | Paper -> Rock 
    | Scissors -> Paper 
    | Rock -> Scissors 
  in

  let get_player_move enemy_move to_do =
    match to_do with
    | Tie -> enemy_move
    | Win -> get_win enemy_move
    | Lose -> get_lose enemy_move
  in 

  let played_score = function
    | Rock -> 1
    | Paper -> 2
    | Scissors -> 3
  in

  let (enemy_move, todo) = move in

  win_score todo + played_score (get_player_move enemy_move todo)
;;

let scores = map move_score_2 moves;;

let score = sum scores;;
